{"version":3,"sources":["res/mselect/cs-mselect.js"],"names":[],"mappings":"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","file":"res/mselect/cs-mselect.js","sourcesContent":["import {inject, customElement, bindable, ObserverLocator} from 'aurelia-framework';  \r\nimport {DDL} from '../ddl/ddl';\r\nimport * as chs from '../chs';\r\n\r\n@inject(Element,DDL,ObserverLocator)\r\n@customElement('cs-mselect')\r\nexport class CsMselect\r\n{\r\n    @bindable src            = null;   //Item source for results\r\n    @bindable values         = [];     //Array of selected objects\r\n    @bindable disabled       = false;  //Is the control disabled?\r\n    @bindable renderItemFn   = null;   //Custom function for rendering item content.   Ex: renderItem(obj, id, txt)\r\n    @bindable renderResultFn = null;   //Custom function for rendering result content. Ex: renderResult(ddl, ctrl, obj, highlightedMarkup)\r\n\r\n    constructor(el, ddl, observerLocator)\r\n    {\r\n        this.observerLocator = observerLocator;\r\n\r\n        //Set control properties\r\n        this.element       = el;       \r\n        this.ddl           = ddl;      //Global singleton drop down list\r\n        this.isOpen        = false;    //Is drop down open?\r\n        this.lastInput     = \"\";       //Stores last input entered into the control (ddl uses & sets this)\r\n    }\r\n\r\n\r\n\r\n    //Lifecycle hooks\r\n    //-------------------------------------------------------------------------------------------------------------------------------------------\r\n    bind(bindingContext)   //Invoked when the databinding engine binds the view. The binding context is the instance that the view is databound to. (All properties have their initial bound values set)\r\n    {\r\n        var el = this.element;\r\n        \r\n        this.contentEl = el.querySelector(\".cs-mselect-items\");           //Div that holds the control's current value content\r\n\r\n\r\n        //Added classes to the element\r\n        el.classList.add(\"cs-ctrl\");                                      //Every cs control has this to idenify them             \r\n        el.classList.add(\"cs-mselect\");                                   //Style select control\r\n        if(el.hasAttribute('vertical'))\r\n        {\r\n            el.classList.add(\"cs-mselect-vertical\");                      //Give it the vertical (listbox) styling\r\n        }\r\n\r\n\r\n        this.savedTabIndex = (el.tabIndex < 0) ? 0 : el.tabIndex;          //Record any tabIndex set on the control element.\r\n        //this.minCount      = parseInt(el.getAttribute(\"min-count\")) || 0;  //Minimum # of selected values required\r\n        this.maxCount      = parseInt(el.getAttribute(\"max-count\")) || 0;  //Minimum # of selected values allowed (0 = no limit)\r\n        this.minChars      = parseInt(el.getAttribute(\"min-chars\")) || 0;  //Min chars that need to be typed before querying\r\n        this.textProp      = el.getAttribute(\"text-prop\") || \"text\";       //Object property to use for text\r\n        this.idProp        = el.getAttribute(\"id-prop\")   || \"id\";         //Object property to use for the ID\r\n\r\n\r\n        //Ensure the control is tabbable (unless the control is disabled)\r\n        if(!this.disabled)\r\n        {\r\n            el.tabIndex  = this.savedTabIndex;\r\n        }\r\n\r\n        \r\n        \r\n        //Milli-seconds to delay querying. If non specified use 0 delay for array data source and 200ms for others sources.\r\n        if (Array.isArray(this.src))   { this.delay = parseInt(el.getAttribute(\"delay\")) || 0;   }\r\n        else                           { this.delay = parseInt(el.getAttribute(\"delay\")) || 200; }\r\n\r\n        //Bind events\r\n        this.clickHandler   = e => this.onClick(e);\r\n        this.focusHandler   = e => this.onFocus(e);\r\n        this.blurHandler    = e => this.onBlur(e);\r\n        this.keydownHandler = e => this.onKeyDown(e);\r\n\r\n        el.addEventListener(\"click\",   this.clickHandler);\r\n        el.addEventListener(\"focus\",   this.focusHandler);\r\n        el.addEventListener(\"blur\",    this.blurHandler);\r\n        el.addEventListener(\"keydown\", this.keydownHandler);\r\n\r\n        //Subscribe to changes to the values array\r\n        this.disposeValuesSubscription = this.observerLocator.getArrayObserver(this.values)\r\n                                                             .subscribe(() => this.valuesChanged());\r\n        \r\n\r\n        this.renderContent();\r\n    }\r\n    unbind()   //Called when the databinding engine unbinds the view\r\n    {\r\n        var el = this.element;\r\n        el.removeEventListener(\"click\",   this.clickHandler);\r\n        el.removeEventListener(\"focus\",   this.focusHandler);\r\n        el.removeEventListener(\"blur\",    this.blurHandler);\r\n        el.removeEventListener(\"keydown\", this.keydownHandler);\r\n\r\n        this.disposeValuesSubscription();\r\n    }\r\n    \r\n\r\n\r\n\r\n    //Event handlers\r\n    //-------------------------------------------------------------------------------------------------------------------------------------------\r\n    onClick(evt)\r\n    {\r\n        if(this.disabled) { return; }\r\n\r\n        var xClicked = chs.closest(evt.target, \".cs-mselect-item-x\");\r\n        if (xClicked)                                                     //If an item's x button was clicked\r\n        {\r\n            var item = chs.closest(evt.target, \".cs-mselect-item\");       //Get the item \r\n            var id   = parseInt(item.dataset.id);                         //Read data-id attribue\r\n\r\n            this.values.chsRemoveWithProperty(this.idProp, id);           //Remove the obj from the values [] matching this id\r\n            this.renderContent();\r\n            return;\r\n        }\r\n        this.ddl.open(this);\r\n    }\r\n\r\n    onFocus()\r\n    {\r\n        if(this.disabled) { this.onBlur(); return; }\r\n        this.element.classList.add(\"focused\");\r\n    }\r\n\r\n    onBlur()\r\n    {\r\n        this.element.classList.remove(\"focused\");\r\n    }\r\n\r\n    onKeyDown(evt)\r\n    {\r\n        if (this.disabled) { return; }\r\n\r\n        if (evt.keyCode === chs.keyCode.UP || evt.keyCode === chs.keyCode.DOWN || chs.isAlphaNumericKey(evt.keyCode))\r\n        {\r\n            this.ddl.open(this);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    //Propety change handlers\r\n    //-------------------------------------------------------------------------------------------------------------------------------------------\r\n    disabledChanged(newVal)\r\n    {\r\n        var el = this.element;\r\n        if(newVal)\r\n        {\r\n            el.classList.add(\"disabled\");\r\n            el.tabIndex = -1;                  //Prevent tabbing\r\n        }\r\n        else\r\n        {\r\n            el.classList.remove(\"disabled\");\r\n            el.tabIndex = this.savedTabIndex;  //Enable tabbing\r\n        }\r\n    }\r\n\r\n    valuesChanged(newVal)\r\n    {\r\n        this.renderContent();\r\n    }\r\n\r\n\r\n    //Actions\r\n    //-------------------------------------------------------------------------------------------------------------------------------------------\r\n    clear()\r\n    {\r\n        this.values.length = 0;   //Clear array\r\n        this.renderContent();\r\n    }\r\n\r\n    setOpenState(b)  //Called by ddl\r\n    {\r\n        this.isOpen = b;\r\n\r\n        if(b) { this.element.classList.add(\"open\"); }\r\n        else  { this.element.classList.remove(\"open\"); }\r\n    }\r\n\r\n    \r\n    addSelectedResult(o)  //Called by ddl when result item selected\r\n    {\r\n        if(this.maxCount === 0 || this.values.length < this.maxCount)\r\n        {\r\n            this.values.push(o);\r\n            this.renderContent();\r\n        }\r\n    }\r\n\r\n    renderContent()\r\n    {\r\n        var markup = \"\";\r\n\r\n        for(var i = 0; i < this.values.length; i++)\r\n        {\r\n            markup += getItemMarkup(this, this.values[i]);\r\n        }\r\n        this.contentEl.innerHTML = markup;\r\n    }\r\n}\r\n\r\n\r\nfunction getItemMarkup(ctrl, obj)\r\n{\r\n    var id   = obj[ctrl.idProp];\r\n    var text = obj[ctrl.textProp];\r\n    var itemContent = ctrl.renderItemFn ? ctrl.renderItemFn(obj, id, text) : chs.encodeHtml(text);\r\n\r\n    return \"<li class='cs-mselect-item' data-id='\" + id + \"'><div class='cs-mselect-item-content'>\" + itemContent + \"</div><div class='cs-mselect-item-x'>x</div></li>\";\r\n}"],"sourceRoot":"/source/"}